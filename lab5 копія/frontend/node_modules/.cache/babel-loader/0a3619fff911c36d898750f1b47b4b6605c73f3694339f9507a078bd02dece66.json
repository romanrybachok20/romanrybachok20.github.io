{"ast":null,"code":"var _jsxFileName = \"/Users/romanrybachok/Desktop/romanrybachok20.github.io/lab5/frontend/src/context/cityContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAuth } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nconst CityContext = /*#__PURE__*/createContext();\nexport const useCity = () => {\n  _s();\n  return useContext(CityContext);\n};\n_s(useCity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CityProvider = ({\n  children\n}) => {\n  _s2();\n  const [cells, setCells] = useState([]);\n  const [budget, setBudget] = useState();\n  const [materials, setMaterials] = useState({});\n  const [workers, setWorkers] = useState();\n  const [typeImages, setTypeImages] = useState({});\n  const [resources, setResources] = useState({});\n  const generateInitialCells = () => {\n    return Array.from({\n      length: 10000\n    }, (_, index) => ({\n      id: index,\n      isSelected: false,\n      hasObject: false,\n      isImproved: false,\n      objectImage: ''\n    }));\n  };\n  const loadResources = async () => {\n    if (Object.keys(resources).length > 0) return;\n    try {\n      const [totalRes, imagesRes, needRes] = await Promise.all([fetch('http://localhost:5001/api/ubm/total_city_resources'), fetch('http://localhost:5001/api/ubm/images_links'), fetch('http://localhost:5001/api/ubm/need_resources')]);\n      const [totalData, imagesData, needData] = await Promise.all([totalRes.json(), imagesRes.json(), needRes.json()]);\n      setBudget(totalData.budget);\n      setMaterials(totalData.materials);\n      setWorkers(totalData.workers);\n      setTypeImages(imagesData);\n      setResources(needData);\n      localStorage.setItem('resources', JSON.stringify({\n        budget: totalData.budget,\n        materials: totalData.materials,\n        workers: totalData.workers,\n        resources: needData\n      }));\n    } catch (error) {\n      console.error('Помилка при завантаженні ресурсів з бекенду:', error);\n    }\n  };\n  const loadUserCityFromBackend = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`);\n      if (!response.ok) throw new Error(\"User not found\");\n      const data = await response.json();\n      const baseCells = generateInitialCells();\n      const changedCells = data.changedCells || [];\n      changedCells.forEach(({\n        id,\n        ...rest\n      }) => {\n        Object.assign(baseCells[id], rest);\n      });\n      setCells(baseCells);\n\n      // Якщо дані збережено користувачем — використовуй їх\n      if (data.budget !== undefined) setBudget(data.budget);\n      if (data.materials !== undefined) setMaterials(data.materials);\n      if (data.workers !== undefined) setWorkers(data.workers);\n      await loadResources(); // Завантажити решту ресурсів (типи, картинки, потреби)\n    } catch (error) {\n      console.error(\"❌ Помилка при завантаженні міста користувача з бекенду:\", error);\n      setCells(generateInitialCells());\n      await loadResources(); // Якщо помилка, все одно завантаж ресурси\n    }\n  };\n  const updateResources = (newMaterials, newBudget, newWorkers) => {\n    setMaterials(newMaterials);\n    setBudget(newBudget);\n    setWorkers(newWorkers);\n  };\n  const updateCells = newCells => {\n    setCells(newCells);\n    sessionStorage.setItem('cells', JSON.stringify(newCells));\n  };\n  const getCellsWithObjects = allCells => {\n    return allCells.filter(cell => cell.hasObject);\n  };\n  const saveUserCityToBackend = async (userId, cityData) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          changedCells: getCellsWithObjects(cityData.cells),\n          budget: cityData.budget,\n          materials: cityData.materials,\n          workers: cityData.workers,\n          lastUpdated: new Date().toISOString()\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save user data\");\n      console.log(\"✅ Дані збережено через backend.\");\n    } catch (error) {\n      console.error(\"❌ Помилка при збереженні через backend:\", error);\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        loadUserCityFromBackend(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (!user) return;\n\n    // Не зберігаємо, якщо дані ще не завантажені\n    if (budget == null || materials == null || workers == null) return;\n    const timeout = setTimeout(() => {\n      saveUserCityToBackend(user.uid, {\n        cells,\n        budget,\n        materials,\n        workers\n      });\n    }, 1000);\n    return () => clearTimeout(timeout);\n  }, [cells, budget, materials, workers]);\n  return /*#__PURE__*/_jsxDEV(CityContext.Provider, {\n    value: {\n      cells,\n      budget,\n      materials,\n      workers,\n      typeImages,\n      resources,\n      updateCells,\n      updateResources\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(CityProvider, \"aGiT5qAxXRJdavML1z3oT6Erd9w=\");\n_c = CityProvider;\nvar _c;\n$RefreshReg$(_c, \"CityProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getAuth","jsxDEV","_jsxDEV","auth","CityContext","useCity","_s","CityProvider","children","_s2","cells","setCells","budget","setBudget","materials","setMaterials","workers","setWorkers","typeImages","setTypeImages","resources","setResources","generateInitialCells","Array","from","length","_","index","id","isSelected","hasObject","isImproved","objectImage","loadResources","Object","keys","totalRes","imagesRes","needRes","Promise","all","fetch","totalData","imagesData","needData","json","localStorage","setItem","JSON","stringify","error","console","loadUserCityFromBackend","userId","response","ok","Error","data","baseCells","changedCells","forEach","rest","assign","undefined","updateResources","newMaterials","newBudget","newWorkers","updateCells","newCells","sessionStorage","getCellsWithObjects","allCells","filter","cell","saveUserCityToBackend","cityData","method","headers","body","lastUpdated","Date","toISOString","log","unsubscribe","onAuthStateChanged","user","uid","currentUser","timeout","setTimeout","clearTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/romanrybachok/Desktop/romanrybachok20.github.io/lab5/frontend/src/context/cityContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAuth } from 'firebase/auth';\n\nconst auth = getAuth();\nconst CityContext = createContext();\nexport const useCity = () => useContext(CityContext);\n\nexport const CityProvider = ({ children }) => {\n  const [cells, setCells] = useState([]);\n  const [budget, setBudget] = useState();\n  const [materials, setMaterials] = useState({});\n  const [workers, setWorkers] = useState();\n  const [typeImages, setTypeImages] = useState({});\n  const [resources, setResources] = useState({});\n\n  const generateInitialCells = () => {\n    return Array.from({ length: 10000 }, (_, index) => ({\n      id: index,\n      isSelected: false,\n      hasObject: false,\n      isImproved: false,\n      objectImage: '',\n    }));\n  };\n\n  const loadResources = async () => {\n    if (Object.keys(resources).length > 0) return;\n\n    try {\n      const [totalRes, imagesRes, needRes] = await Promise.all([\n        fetch('http://localhost:5001/api/ubm/total_city_resources'),\n        fetch('http://localhost:5001/api/ubm/images_links'),\n        fetch('http://localhost:5001/api/ubm/need_resources'),\n      ]);\n\n      const [totalData, imagesData, needData] = await Promise.all([\n        totalRes.json(),\n        imagesRes.json(),\n        needRes.json(),\n      ]);\n\n      setBudget(totalData.budget);\n      setMaterials(totalData.materials);\n      setWorkers(totalData.workers);\n      setTypeImages(imagesData);\n      setResources(needData);\n\n      localStorage.setItem('resources', JSON.stringify({\n        budget: totalData.budget,\n        materials: totalData.materials,\n        workers: totalData.workers,\n        resources: needData,\n      }));\n    } catch (error) {\n      console.error('Помилка при завантаженні ресурсів з бекенду:', error);\n    }\n  };\n\nconst loadUserCityFromBackend = async (userId) => {\n  try {\n    const response = await fetch(`http://localhost:5001/api/userCities/${userId}`);\n    if (!response.ok) throw new Error(\"User not found\");\n\n    const data = await response.json();\n    const baseCells = generateInitialCells();\n    const changedCells = data.changedCells || [];\n\n    changedCells.forEach(({ id, ...rest }) => {\n      Object.assign(baseCells[id], rest);\n    });\n\n    setCells(baseCells);\n\n    // Якщо дані збережено користувачем — використовуй їх\n    if (data.budget !== undefined) setBudget(data.budget);\n    if (data.materials !== undefined) setMaterials(data.materials);\n    if (data.workers !== undefined) setWorkers(data.workers);\n\n    await loadResources(); // Завантажити решту ресурсів (типи, картинки, потреби)\n  } catch (error) {\n    console.error(\"❌ Помилка при завантаженні міста користувача з бекенду:\", error);\n    setCells(generateInitialCells());\n    await loadResources(); // Якщо помилка, все одно завантаж ресурси\n  }\n};\n\n\n  const updateResources = (newMaterials, newBudget, newWorkers) => {\n    setMaterials(newMaterials);\n    setBudget(newBudget);\n    setWorkers(newWorkers);\n  };\n\n  const updateCells = (newCells) => {\n    setCells(newCells);\n    sessionStorage.setItem('cells', JSON.stringify(newCells));\n  };\n\n  const getCellsWithObjects = (allCells) => {\n    return allCells.filter(cell => cell.hasObject);\n  };\n\n  const saveUserCityToBackend = async (userId, cityData) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          changedCells: getCellsWithObjects(cityData.cells),\n          budget: cityData.budget,\n          materials: cityData.materials,\n          workers: cityData.workers,\n          lastUpdated: new Date().toISOString(),\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to save user data\");\n\n      console.log(\"✅ Дані збережено через backend.\");\n    } catch (error) {\n      console.error(\"❌ Помилка при збереженні через backend:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        loadUserCityFromBackend(user.uid);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\nuseEffect(() => {\n  const user = auth.currentUser;\n  if (!user) return;\n\n  // Не зберігаємо, якщо дані ще не завантажені\n  if (budget == null || materials == null || workers == null) return;\n\n  const timeout = setTimeout(() => {\n    saveUserCityToBackend(user.uid, {\n      cells,\n      budget,\n      materials,\n      workers,\n    });\n  }, 1000);\n\n  return () => clearTimeout(timeout);\n}, [cells, budget, materials, workers]);\n\n  return (\n    <CityContext.Provider\n      value={{\n        cells,\n        budget,\n        materials,\n        workers,\n        typeImages,\n        resources,\n        updateCells,\n        updateResources,\n      }}\n    >\n      {children}\n    </CityContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}