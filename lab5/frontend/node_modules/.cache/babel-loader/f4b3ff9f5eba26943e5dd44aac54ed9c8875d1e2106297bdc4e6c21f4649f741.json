{"ast":null,"code":"var _jsxFileName = \"/Users/romanrybachok/Desktop/romanrybachok20.github.io/lab5/frontend/src/context/cityContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAuth } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth = getAuth();\nconst CityContext = /*#__PURE__*/createContext();\nexport const useCity = () => {\n  _s();\n  return useContext(CityContext);\n};\n_s(useCity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CityProvider = ({\n  children\n}) => {\n  _s2();\n  const [cells, setCells] = useState([]);\n  const [budget, setBudget] = useState();\n  const [materials, setMaterials] = useState({});\n  const [workers, setWorkers] = useState();\n  const [typeImages, setTypeImages] = useState({});\n  const [resources, setResources] = useState({});\n  const generateInitialCells = () => {\n    return Array.from({\n      length: 10000\n    }, (_, index) => ({\n      id: index,\n      isSelected: false,\n      hasObject: false,\n      isImproved: false,\n      objectImage: ''\n    }));\n  };\n\n  // Завантажуємо ресурси з `localStorage`, якщо вони є\n  const loadResourcesFromLocalStorage = () => {\n    const savedResources = localStorage.getItem('resources');\n    if (savedResources) {\n      const parsedResources = JSON.parse(savedResources);\n      setBudget(parsedResources.budget);\n      setMaterials(parsedResources.materials);\n      setWorkers(parsedResources.workers);\n      setResources(parsedResources.resources);\n    }\n  };\n  const loadResources = async () => {\n    try {\n      const [totalRes, imagesRes, needRes] = await Promise.all([fetch('http://localhost:5001/api/ubm/total_city_resources'), fetch('http://localhost:5001/api/ubm/images_links'), fetch('http://localhost:5001/api/ubm/need_resources')]);\n      const [totalData, imagesData, needData] = await Promise.all([totalRes.json(), imagesRes.json(), needRes.json()]);\n      setBudget(totalData.budget);\n      setMaterials(totalData.materials);\n      setWorkers(totalData.workers);\n      setTypeImages(imagesData);\n      setResources(needData);\n\n      // Зберігаємо ресурси в localStorage\n      localStorage.setItem('resources', JSON.stringify({\n        budget: totalData.budget,\n        materials: totalData.materials,\n        workers: totalData.workers,\n        resources: needData\n      }));\n    } catch (error) {\n      console.error('Помилка при завантаженні ресурсів з бекенду:', error);\n    }\n  };\n  const loadUserCityFromBackend = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`);\n      if (!response.ok) throw new Error(\"User not found\");\n      const data = await response.json();\n      const baseCells = generateInitialCells();\n      const changedCells = data.changedCells || [];\n      changedCells.forEach(({\n        id,\n        ...rest\n      }) => {\n        Object.assign(baseCells[id], rest);\n      });\n      setCells(baseCells);\n      setBudget(data.budget);\n      setMaterials(data.materials);\n      setWorkers(data.workers);\n    } catch (error) {\n      console.error(\"Помилка при завантаженні міста користувача з бекенду:\", error);\n      setCells(generateInitialCells());\n    }\n  };\n  const saveUserCityToBackend = async (userId, cityData) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          changedCells: cityData.cells.filter(cell => cell.hasObject),\n          budget: cityData.budget,\n          materials: cityData.materials,\n          workers: cityData.workers,\n          lastUpdated: new Date().toISOString()\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save user data\");\n      console.log(\"✅ Дані збережено через backend.\");\n    } catch (error) {\n      console.error(\"❌ Помилка при збереженні через backend:\", error);\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        loadResourcesFromLocalStorage(); // Завантажуємо ресурси з localStorage\n        loadUserCityFromBackend(user.uid);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (!user) return;\n    const timeout = setTimeout(() => {\n      saveUserCityToBackend(user.uid, {\n        cells,\n        budget,\n        materials,\n        workers\n      });\n    }, 1000);\n    return () => clearTimeout(timeout);\n  }, [cells, budget, materials, workers]);\n  return /*#__PURE__*/_jsxDEV(CityContext.Provider, {\n    value: {\n      cells,\n      budget,\n      materials,\n      workers,\n      typeImages,\n      resources,\n      updateCells: setCells,\n      updateResources: loadResources\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s2(CityProvider, \"aGiT5qAxXRJdavML1z3oT6Erd9w=\");\n_c = CityProvider;\nvar _c;\n$RefreshReg$(_c, \"CityProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getAuth","jsxDEV","_jsxDEV","auth","CityContext","useCity","_s","CityProvider","children","_s2","cells","setCells","budget","setBudget","materials","setMaterials","workers","setWorkers","typeImages","setTypeImages","resources","setResources","generateInitialCells","Array","from","length","_","index","id","isSelected","hasObject","isImproved","objectImage","loadResourcesFromLocalStorage","savedResources","localStorage","getItem","parsedResources","JSON","parse","loadResources","totalRes","imagesRes","needRes","Promise","all","fetch","totalData","imagesData","needData","json","setItem","stringify","error","console","loadUserCityFromBackend","userId","response","ok","Error","data","baseCells","changedCells","forEach","rest","Object","assign","saveUserCityToBackend","cityData","method","headers","body","filter","cell","lastUpdated","Date","toISOString","log","unsubscribe","onAuthStateChanged","user","uid","currentUser","timeout","setTimeout","clearTimeout","Provider","value","updateCells","updateResources","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/romanrybachok/Desktop/romanrybachok20.github.io/lab5/frontend/src/context/cityContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAuth } from 'firebase/auth';\n\nconst auth = getAuth();\nconst CityContext = createContext();\nexport const useCity = () => useContext(CityContext);\n\nexport const CityProvider = ({ children }) => {\n  const [cells, setCells] = useState([]);\n  const [budget, setBudget] = useState();\n  const [materials, setMaterials] = useState({});\n  const [workers, setWorkers] = useState();\n  const [typeImages, setTypeImages] = useState({});\n  const [resources, setResources] = useState({});\n\n  const generateInitialCells = () => {\n    return Array.from({ length: 10000 }, (_, index) => ({\n      id: index,\n      isSelected: false,\n      hasObject: false,\n      isImproved: false,\n      objectImage: '',\n    }));\n  };\n\n  // Завантажуємо ресурси з `localStorage`, якщо вони є\n  const loadResourcesFromLocalStorage = () => {\n    const savedResources = localStorage.getItem('resources');\n    if (savedResources) {\n      const parsedResources = JSON.parse(savedResources);\n      setBudget(parsedResources.budget);\n      setMaterials(parsedResources.materials);\n      setWorkers(parsedResources.workers);\n      setResources(parsedResources.resources);\n    }\n  };\n\n  const loadResources = async () => {\n    try {\n      const [totalRes, imagesRes, needRes] = await Promise.all([\n        fetch('http://localhost:5001/api/ubm/total_city_resources'),\n        fetch('http://localhost:5001/api/ubm/images_links'),\n        fetch('http://localhost:5001/api/ubm/need_resources'),\n      ]);\n\n      const [totalData, imagesData, needData] = await Promise.all([\n        totalRes.json(),\n        imagesRes.json(),\n        needRes.json(),\n      ]);\n\n      setBudget(totalData.budget);\n      setMaterials(totalData.materials);\n      setWorkers(totalData.workers);\n      setTypeImages(imagesData);\n      setResources(needData);\n\n      // Зберігаємо ресурси в localStorage\n      localStorage.setItem('resources', JSON.stringify({\n        budget: totalData.budget,\n        materials: totalData.materials,\n        workers: totalData.workers,\n        resources: needData\n      }));\n    } catch (error) {\n      console.error('Помилка при завантаженні ресурсів з бекенду:', error);\n    }\n  };\n\n  const loadUserCityFromBackend = async (userId) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`);\n      if (!response.ok) throw new Error(\"User not found\");\n\n      const data = await response.json();\n      const baseCells = generateInitialCells();\n      const changedCells = data.changedCells || [];\n\n      changedCells.forEach(({ id, ...rest }) => {\n        Object.assign(baseCells[id], rest);\n      });\n\n      setCells(baseCells);\n      setBudget(data.budget);\n      setMaterials(data.materials);\n      setWorkers(data.workers);\n    } catch (error) {\n      console.error(\"Помилка при завантаженні міста користувача з бекенду:\", error);\n      setCells(generateInitialCells());\n    }\n  };\n\n  const saveUserCityToBackend = async (userId, cityData) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/userCities/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          changedCells: cityData.cells.filter(cell => cell.hasObject),\n          budget: cityData.budget,\n          materials: cityData.materials,\n          workers: cityData.workers,\n          lastUpdated: new Date().toISOString(),\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to save user data\");\n\n      console.log(\"✅ Дані збережено через backend.\");\n    } catch (error) {\n      console.error(\"❌ Помилка при збереженні через backend:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        loadResourcesFromLocalStorage(); // Завантажуємо ресурси з localStorage\n        loadUserCityFromBackend(user.uid);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (!user) return;\n\n    const timeout = setTimeout(() => {\n      saveUserCityToBackend(user.uid, {\n        cells,\n        budget,\n        materials,\n        workers,\n      });\n    }, 1000);\n\n    return () => clearTimeout(timeout);\n  }, [cells, budget, materials, workers]);\n\n  return (\n    <CityContext.Provider\n      value={{\n        cells,\n        budget,\n        materials,\n        workers,\n        typeImages,\n        resources,\n        updateCells: setCells,\n        updateResources: loadResources,\n      }}\n    >\n      {children}\n    </CityContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}